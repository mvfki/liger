% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/liger-class.R, R/ligerCommand-class.R,
%   R/ligerDataset-class.R
\docType{class}
\name{liger-class}
\alias{liger-class}
\alias{liger}
\alias{show,liger-method}
\alias{dim,liger-method}
\alias{dimnames,liger-method}
\alias{dimnames<-,liger,list-method}
\alias{[,liger,character,missing,ANY-method}
\alias{[,liger,missing,index,ANY-method}
\alias{[,liger,character,index,ANY-method}
\alias{datasets}
\alias{datasets<-}
\alias{datasets,liger-method}
\alias{datasets<-,liger,logical-method}
\alias{datasets<-,liger,missing-method}
\alias{dataset}
\alias{dataset<-}
\alias{dataset,liger,character_OR_NULL-method}
\alias{dataset,liger,missing-method}
\alias{dataset,liger,numeric-method}
\alias{dataset<-,liger,character,missing,ANY,ligerDataset-method}
\alias{dataset<-,liger,character,ANY,ANY,matrixLike-method}
\alias{dataset<-,liger,character,missing,ANY,NULL-method}
\alias{names,liger-method}
\alias{names<-,liger,character-method}
\alias{length,liger-method}
\alias{cellMeta}
\alias{cellMeta<-}
\alias{cellMeta,liger,NULL-method}
\alias{cellMeta,liger,character-method}
\alias{cellMeta,liger,missing-method}
\alias{cellMeta<-,liger,missing-method}
\alias{cellMeta<-,liger,character-method}
\alias{[[,liger,ANY,missing-method}
\alias{[[<-,liger,ANY,missing-method}
\alias{$,liger-method}
\alias{$<-,liger-method}
\alias{varFeatures}
\alias{varFeatures<-}
\alias{varFeatures,liger-method}
\alias{varFeatures<-,liger,ANY,character-method}
\alias{fortify.liger}
\alias{c.liger}
\alias{commands}
\alias{commands,liger-method}
\alias{scaleData,liger,character-method}
\alias{scaleData,liger,numeric-method}
\alias{scaleUnsharedData,liger,character-method}
\alias{scaleUnsharedData,liger,numeric-method}
\alias{getMatrix,liger,ANY,ANY,ANY-method}
\alias{getH5File,liger,character-method}
\title{liger class}
\usage{
\S4method{show}{liger}(object)

\S4method{dim}{liger}(x)

\S4method{dimnames}{liger}(x)

\S4method{dimnames}{liger,list}(x) <- value

\S4method{[}{liger,character,missing,ANY}(x, i, j, ..., drop = TRUE)

\S4method{[}{liger,missing,index,ANY}(x, i, j, ..., drop = TRUE)

\S4method{[}{liger,character,index,ANY}(x, i, j, ..., drop = TRUE)

datasets(x, check = NULL)

datasets(x, check = TRUE) <- value

\S4method{datasets}{liger}(x, check = NULL)

\S4method{datasets}{liger,logical}(x, check = TRUE) <- value

\S4method{datasets}{liger,missing}(x, check = TRUE) <- value

dataset(x, dataset = NULL)

dataset(x, dataset, type = NULL, qc = TRUE) <- value

\S4method{dataset}{liger,character_OR_NULL}(x, dataset = NULL)

\S4method{dataset}{liger,missing}(x, dataset = NULL)

\S4method{dataset}{liger,numeric}(x, dataset = NULL)

\S4method{dataset}{liger,character,missing,ANY,ligerDataset}(x, dataset, type = NULL, qc = TRUE) <- value

\S4method{dataset}{liger,character,ANY,ANY,matrixLike}(x, dataset, type = c("rawData", "normData", "scaleData"), qc = TRUE) <- value

\S4method{dataset}{liger,character,missing,ANY,`NULL`}(x, dataset, type = NULL, qc = TRUE) <- value

\S4method{names}{liger}(x)

\S4method{names}{liger,character}(x) <- value

\S4method{length}{liger}(x)

cellMeta(x, columns = NULL, cellIdx = NULL, as.data.frame = FALSE, ...)

cellMeta(x, columns = NULL, check = FALSE) <- value

\S4method{cellMeta}{liger,`NULL`}(x, columns = NULL, cellIdx = NULL, as.data.frame = FALSE, ...)

\S4method{cellMeta}{liger,character}(x, columns = NULL, cellIdx = NULL, as.data.frame = FALSE, ...)

\S4method{cellMeta}{liger,missing}(x, columns = NULL, cellIdx = NULL, as.data.frame = FALSE, ...)

\S4method{cellMeta}{liger,missing}(x, columns = NULL, check = FALSE) <- value

\S4method{cellMeta}{liger,character}(x, columns = NULL, check = FALSE) <- value

\S4method{[[}{liger,ANY,missing}(x, i, j, ...)

\S4method{[[}{liger,ANY,missing}(x, i, j, ...) <- value

\S4method{$}{liger}(x, name)

\S4method{$}{liger}(x, name) <- value

varFeatures(x)

varFeatures(x, check = TRUE) <- value

\S4method{varFeatures}{liger}(x)

\S4method{varFeatures}{liger,ANY,character}(x, check = TRUE) <- value

\method{fortify}{liger}(x)

\method{c}{liger}(...)

commands(x, funcName = NULL, arg = NULL)

\S4method{commands}{liger}(x, funcName = NULL, arg = NULL)

\S4method{scaleData}{liger,character}(x, dataset = NULL)

\S4method{scaleData}{liger,numeric}(x, dataset = NULL)

\S4method{scaleUnsharedData}{liger,character}(x, dataset = NULL)

\S4method{scaleUnsharedData}{liger,numeric}(x, dataset = NULL)

\S4method{getMatrix}{liger,ANY,ANY,ANY}(
  x,
  slot = c("rawData", "normData", "scaleData", "scaleUnsharedData", "H", "V", "U", "W",
    "H.norm"),
  dataset = NULL,
  returnList = FALSE
)

\S4method{getH5File}{liger,character}(x, dataset = NULL)
}
\arguments{
\item{x, object}{A \linkS4class{liger} object}

\item{value}{Check detail sections for requirements.}

\item{i, j}{Feature and cell index for \code{`[`} method. For \code{`[[`}
method, use a single variable name with \code{i} and \code{j} is not
applicable.}

\item{...}{See detailed sections for explanation.}

\item{drop}{Not applicable.}

\item{check}{Logical, whether to perform object validity check on setting new
value.}

\item{dataset}{Name or numeric index of a dataset}

\item{type}{When using \code{dataset<-} with a matrix like \code{value},
specify what type the matrix is. Choose from \code{"rawData"},
\code{"normData"} or \code{"scaleData"}.}

\item{qc}{Logical, whether to perform general qc on added new dataset.}

\item{columns}{The names of available variables in \code{cellMeta} slot. When
\code{as.data.frame = TRUE}, please use variable names after coercion.}

\item{cellIdx}{Valid cell subscription to subset retrieved variables. Default
\code{NULL} uses all cells.}

\item{as.data.frame}{Logical, whether to apply
\code{\link[base]{as.data.frame}} on the subscription. Default \code{FALSE}.}

\item{name}{The name of available variables in \code{cellMeta} slot.}

\item{funcName, arg}{See Command records section.}

\item{slot}{Name of slot to retrieve matrix from. Options shown in Usage.}

\item{returnList}{Logical, whether to force return a list even when only one
dataset-specific matrix (i.e. expression matrices, H, V or U) is requested.
Default \code{FALSE}.}
}
\value{
See detailed sections for explanetion.
}
\description{
\code{liger} object is the main data container for LIGER
analysis in R. The slot \code{datasets} is a list where each element should
be a \linkS4class{ligerDataset} object containing dataset specific
information, such as the expression matrices. The other parts of liger object
stores information that can be shared across the analysis, such as the cell
metadata and factorization result matrices.

This manual provides explanation to the \code{liger} object structure as well
as usage of class-specific methods. Please see detail sections for more
information.

For \code{liger} objects created with older versions of rliger package,
please try updating the objects individually with
\code{\link{convertOldLiger}}.
}
\section{Slots}{

\describe{
\item{\code{datasets}}{list of \linkS4class{ligerDataset} objects.}

\item{\code{cellMeta}}{\linkS4class{DFrame} object for cell metadata.}

\item{\code{varFeatures}}{Character vector of feature names.}

\item{\code{W}}{Matrix of gene loading for each factor.}

\item{\code{H.norm}}{Matrix of aligned factor loading for each cell.}

\item{\code{commands}}{List of \linkS4class{ligerCommand} objects. Record of
analysis.}

\item{\code{uns}}{List for unstructured meta-info of analyses}

\item{\code{version}}{Record of version of rliger package}
}}

\section{Dimensionality}{

For a \code{liger} object, the column orientation is assigned for
cells. Due to the data structure, it is hard to define a row index for the
\code{liger} object, which might contain datasets that vary in number of
genes.

Therefore, for \code{liger} objects, \code{dim} and \code{dimnames} returns
\code{NA}/\code{NULL} for rows and total cell counts/barcodes for the
columns.

For direct call of \code{dimnames<-} method, \code{value} should be a list
with \code{NULL} as the first element and valid cell identifiers as the
second element. For \code{colnames<-} method, the character vector of cell
identifiers. \code{rownames<-} method is not applicable.
}

\section{Subsetting}{

For more detail of subsetting a \code{liger} object or a
\linkS4class{ligerDataset} object, please check out \code{\link{subsetLiger}}
and \code{\link{subsetLigerDataset}}. Here, we set the S4 method
"single-bracket" \code{[} as a quick wrapper to subset a \code{liger} object.
Note that \code{j} serves as cell subscriptor which can be any valid index
refering the collection of all cells (i.e. \code{rownames(cellMeta(obj))}).
While \code{i}, the feature subscriptor can only be character vector because
the features for each dataset can vary. \code{...} arugments are passed to
\code{subsetLiger} so that advanced options are allowed.
}

\section{Dataset access}{

\code{datasets()} method only accesses the \code{datasets} slot, the list of
\linkS4class{ligerDataset} objects. \code{dataset()} method accesses a single
dataset, with subsequent cell metadata updates and checks bonded when adding
or modifying a dataset. Therefore, when users want to modify something inside
a \code{ligerDataset} while no cell metadata change should happen, it is
recommended to use: \code{datasets(x)[[name]] <- ligerD} for efficiency,
though the result would be the same as \code{dataset(x, name) <- ligerD}.

\code{length()} and \code{names()} methods are implemented to access the
number and names of datasets. \code{names<-} method is supported for
modifying dataset names, with taking care of the "dataset" variable in cell
metadata.
}

\section{Matrix access}{

For \code{liger} object, \code{rawData()}, \code{normData},
\code{scaleData()} and \code{scaleUnsharedData()} methods are exported for
users to access the corresponding feature expression matrix with
specification of one dataset. For retrieving a type of matrix from multiple
datasets, please use \code{getMatrix()} method.

When only one matrix is expected to be retrieved by \code{getMatrix()}, the
matrix itself will be returned. A list will be returned if multiple matrices
is requested (by querying multiple datasets) or \code{returnList} is set to
\code{TRUE}.
}

\section{Cell metadata access}{

Three approaches are provided for access of cell metadata. A generic function
\code{cellMeta} is implemented with plenty of options and multi-variable
accessibility. Besides, users can use double-bracket (e.g.
\code{ligerObj[[varName]]}) or dollor-sign (e.g. \code{ligerObj$nUMI}) to
access or modify single variables.

For users' convenience of generating a customized ggplot with available cell
metadata, the S3 method \code{fortify.liger} is implemented. With this under
the hook, users can create simple ggplots by directly starting with
\code{ggplot(ligerObj, aes(...))} where cell metadata variables can be
directly thrown into \code{aes()}.
}

\section{Variable feature access}{

The \code{varFeatures} slot allows for character vectors of gene names.
\code{varFeatures(x)} returns this vector and \code{value} for
\code{varFeatures<-} method has to be a character vector or \code{NULL}.
The replacement method, when \code{check = TRUE} performs checks on gene
name consistency check across the \code{scaleData}, \code{H}, \code{V} slots
of inner \code{ligerDataset} objects as well as the \code{W} and
\code{H.norm} slots of the input \code{liger} object.
}

\section{Combining multiple liger object}{
 The list of \code{datasets} slot,
the rows of \code{cellMeta} slot and the list of \code{commands} slot will
be simply concatenated. Variable features in \code{varFeatures} slot will be
taken a union. The \eqn{W} and \eqn{H.norm} matrices are not taken into
account for now.
}

\section{Command records}{

rliger functions, that perform calculation and update the \code{liger}
object, will be recorded in a \code{ligerCommand} object and stored in the
\code{commands} slot, a list, of \code{liger} object. Method
\code{commands()} is implemented to retrieve or show the log history.
Running with \code{funcName = NULL} (default) returns all command labels.
Specifying \code{funcName} allows partial matching to all command labels
and returns a subset list (of \code{ligerCommand} object) of matches (or
the \code{ligerCommand} object if only one match found). If \code{arg} is
further specified, a subset list of parameters from the matches will be
returned. For example, requesting a list of resolution values used in
all louvain cluster attempts: \code{commands(ligerObj, "louvainCluster",
"resolution")}
}

\examples{
data("pbmcPlot", package = "rliger")
# Methods for base generics
pbmcPlot
print(pbmcPlot)
dim(pbmcPlot)
ncol(pbmcPlot)
colnames(pbmcPlot)[1:5]
pbmcPlot[varFeatures(pbmcPlot)[1:10], 1:10]
names(pbmcPlot)
length(pbmcPlot)

# rliger generics
## Retrieving dataset(s), replacement methods available
datasets(pbmcPlot)
dataset(pbmcPlot, "ctrl")
dataset(pbmcPlot, 2)

## Retrieving cell metadata, replacement methods available
cellMeta(pbmcPlot)
head(pbmcPlot[["nUMI"]])
head(pbmcPlot$UMAP)

## Retrieving variable features, replacement methods available
varFeatures(pbmcPlot)

## Command record/history
pbmcPlot <- scaleNotCenter(pbmcPlot)
commands(pbmcPlot)
commands(pbmcPlot, funcName = "scaleNotCenter")

# S3 methods
c(pbmcPlot, pbmcPlot)

library(ggplot2)
ggplot(pbmcPlot, aes(x = UMAP.1, y = UMAP.2)) + geom_point()
}
