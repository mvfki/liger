% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimizeNewParam.R
\name{optimizeSubset}
\alias{optimizeSubset}
\title{Perform factorization for subset of data}
\usage{
optimizeSubset(
  object,
  cellIdx,
  lambda = NULL,
  thresh = 1e-04,
  max.iters = 100,
  datasets.scale = NULL,
  seed = 1,
  verbose = getOption("ligerVerbose"),
  cell.subset = NULL,
  cluster.subset = NULL
)
}
\arguments{
\item{object}{\linkS4class{liger} object. Should call
\code{\link{optimizeALS}} in advance.}

\item{cellIdx}{Valid index vector that applies to the whole object. See
\code{\link{subsetLiger}} for requirement.}

\item{lambda}{Numeric regularization parameter. Default \code{5}.}

\item{thresh}{Convergence threshold. Convergence occurs when
\eqn{|obj_0-obj|/(mean(obj_0,obj)) < thresh}. Default \code{1e-4}.}

\item{max.iters}{Maximum number of block coordinate descent iterations to
perform. Default \code{100}.}

\item{datasets.scale}{Names of datasets to rescale after subsetting.
Default \code{NULL} does not rescale.}

\item{seed}{Random seed to allow reproducible results. Default \code{1}.}

\item{verbose}{Logical. Whether to show information of the progress. Default
\code{getOption("ligerVerbose")} which is \code{TRUE} if users have not set.}

\item{cell.subset, cluster.subset}{\bold{Deprecated}. Please use
\code{cellIdx} to explicitly specify.}
}
\value{
Subset \code{object} with factorization matrices reset, including
the \code{W} matrix in \linkS4class{liger} object, and \code{W} and \code{V}
matrices in each \linkS4class{ligerDataset} object in the \code{datasets}
slot. \code{scaleData} in the \linkS4class{ligerDataset} objects of
datasets specified by \code{datasets.scale} will also be updated to reflect
the subset.
}
\description{
Uses an efficient strategy for updating that takes advantage of
the information in the existing factorization.
}
\examples{
pbmc <- normalize(pbmc)
pbmc <- selectGenes(pbmc)
pbmc <- scaleNotCenter(pbmc)
pbmc <- optimizeALS(pbmc, k = 20, maxIter = 10)
pbmc <- optimizeSubset(pbmc, cellIdx = sort(sample(ncol(pbmc), 200)),
                       max.iters = 10)
}
