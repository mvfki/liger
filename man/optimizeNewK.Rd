% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimizeNewParam.R
\name{optimizeNewK}
\alias{optimizeNewK}
\title{Perform factorization for new value of k}
\usage{
optimizeNewK(
  object,
  k.new,
  lambda = NULL,
  thresh = 1e-04,
  max.iters = 100,
  rand.seed = 1,
  verbose = TRUE
)
}
\arguments{
\item{object}{\linkS4class{liger} object. Should call
\code{\link{optimizeALS}} in advance.}

\item{k.new}{Number of factors of factorization.}

\item{lambda}{Regularization parameter. By default, this will use the lambda
last used with \code{\link{optimizeALS}}.}

\item{thresh}{Convergence threshold. Convergence occurs when
\eqn{|obj_0-obj|/(mean(obj0,obj)) < thresh}. Default \code{1e-4}.}

\item{max.iters}{Maximum number of block coordinate descent iterations to
perform. Default \code{100}.}

\item{rand.seed}{Random seed to set. Only relevant if \code{k.new} is greater
than \code{k}. Default \code{1}.}

\item{verbose}{Logical. Whether to show information of the progress. Default
\code{TRUE}.}
}
\value{
\code{object} with \code{W} slot updated with the new \eqn{W}
matrix, and the \code{H} and \code{V} slots of each
\linkS4class{ligerDataset} object in the \code{datasets} slot updated with
the new dataset specific \eqn{H} and \eqn{V} matrix, respectively.
}
\description{
This uses an efficient strategy for updating that takes
advantage of the information in the existing factorization. It is most
recommended for values of \code{k.new} smaller than current value (\code{k},
which is set when running \code{\link{optimizeALS}}), where it
is more likely to speed up the factorization.
}
\examples{
data("pbmc", package = "rliger")
pbmc <- normalize(pbmc)
pbmc <- selectGenes(pbmc)
pbmc <- scaleNotCenter(pbmc)
pbmc <- optimizeALS(pbmc, k = 20, maxIter = 5)
pbmc <- optimizeNewK(pbmc, k.new = 15, max.iters = 10)
}
\seealso{
\code{\link{optimizeALS}}
}
