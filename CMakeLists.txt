cmake_minimum_required(VERSION 3.20 FATAL_ERROR)
project(LIGER VERSION 1.99.0 LANGUAGES C CXX)
set(CMAKE_POLICY_WARNING_CMP0060 1)
include(CheckIncludeFile)
include(CheckCXXCompilerFlag)
include(cmake/CPM.cmake)
include(cmake/FindR.cmake)
include(cmake/FindRModule.cmake)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_C_FLAGS_RELEASE "")
set(CMAKE_CXX_FLAGS_RELEASE "")
set(CMAKE_VERBOSE_MAKEFILE TRUE)

set(srclist ModularityOptimizer.cpp RModularityOptimizer.cpp RcppExports.cpp
data_processing.cpp fast_wilcox.cpp feature_mat.cpp quantile_norm.cpp run_nmf.cpp snn.cpp)
list(TRANSFORM srclist PREPEND "${PROJECT_SOURCE_DIR}/src/")
add_library(rliger2 SHARED ${srclist})
set_target_properties(rliger2 PROPERTIES PREFIX "")
if(APPLE)
    set_target_properties(rliger2 PROPERTIES SUFFIX ".so")
endif()
target_include_directories(rliger2
    PRIVATE "${PROJECT_SOURCE_DIR}/src/")

find_r_module(Rcpp)
find_r_module(RcppArmadillo)
find_r_module(RcppProgress)
find_r_module(RcppEigen)

if(R_INCLUDE_DIR)
    target_include_directories(rliger2 PRIVATE "${R_INCLUDE_DIR}")
else()
    message(FATAL_ERROR "missing R headers")
endif()
if(R_RCPP)
    target_include_directories(rliger2 PRIVATE "${R_RCPP}/include")
else()
    message(FATAL_ERROR "missing Rcpp")
endif()
if(R_RCPPARMADILLO)
    target_include_directories(rliger2 PRIVATE "${R_RCPPARMADILLO}/include")
    target_compile_options(rliger2 PRIVATE "-DARMA_DONT_USE_OPENMP")
    target_compile_options(rliger2 PRIVATE "-DARMA_64BIT_WORD=1")
else()
    message(FATAL_ERROR "missing RcppArmadillo")
endif()

if(R_RCPPPROGRESS)
    target_include_directories(rliger2 PRIVATE "${R_RCPPPROGRESS}/include")
else()
    message(FATAL_ERROR "missing RcppProgress")
endif()

if(R_RCPPEIGEN)
    target_include_directories(rliger2 PRIVATE "${R_RCPPEIGEN}/include")
else()
    message(FATAL_ERROR "missing RcppEigen")
endif()

if(NOT(APPLE AND(CMAKE_HOST_SYSTEM_PROCESSOR MATCHES arm64)))
if(OpenMP_CXX_FOUND)
    target_compile_options(rliger2 PRIVATE ${OpenMP_CXX_FLAGS})
    target_include_directories(rliger2 PRIVATE ${OpenMP_CXX_INCLUDE_DIRS})
endif()
endif()
